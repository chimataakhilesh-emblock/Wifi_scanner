[1/10] Performing build step for 'bootloader'
[1/1] C:\WINDOWS\system32\cmd.exe /C "cd /D C:\Users\dell\wifi_scanner\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.4_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.4.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Users/dell/wifi_scanner/build/bootloader/bootloader.bin"
Bootloader binary size 0x6580 bytes. 0xa80 bytes (9%) free.
[2/10] No install step for 'bootloader'
[3/10] Completed 'bootloader'
[4/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
C:/Users/dell/wifi_scanner/main/main.c: In function 'sync_time_with_ntp':
C:/Users/dell/wifi_scanner/main/main.c:68:5: warning: 'sntp_setoperatingmode' is deprecated: use esp_sntp_setoperatingmode() instead [-Wdeprecated-declarations]
   68 |     sntp_setoperatingmode(SNTP_OPMODE_POLL);
      |     ^~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/dell/wifi_scanner/main/main.c:7:
C:/Espressif/frameworks/esp-idf-v5.4.1/components/lwip/include/apps/esp_sntp.h:249:6: note: declared here
  249 | void sntp_setoperatingmode(u8_t operating_mode)
      |      ^~~~~~~~~~~~~~~~~~~~~
C:/Users/dell/wifi_scanner/main/main.c:69:5: warning: 'sntp_setservername' is deprecated: use esp_sntp_setservername() instead [-Wdeprecated-declarations]
   69 |     sntp_setservername(0, "pool.ntp.org");
      |     ^~~~~~~~~~~~~~~~~~
C:/Espressif/frameworks/esp-idf-v5.4.1/components/lwip/include/apps/esp_sntp.h:263:6: note: declared here
  263 | void sntp_setservername(u8_t idx, const char *server)
      |      ^~~~~~~~~~~~~~~~~~
C:/Users/dell/wifi_scanner/main/main.c:70:5: warning: 'sntp_init' is deprecated: use esp_sntp_init() instead [-Wdeprecated-declarations]
   70 |     sntp_init();
      |     ^~~~~~~~~
C:/Espressif/frameworks/esp-idf-v5.4.1/components/lwip/include/apps/esp_sntp.h:269:6: note: declared here
  269 | void sntp_init(void)
      |      ^~~~~~~~~
[5/10] Linking C static library esp-idf\main\libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable wifi_scanner.elf
[8/10] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/Users/dell/wifi_scanner/build/wifi_scanner.bin
[9/10] C:\WINDOWS\system32\cmd.exe /C "cd /D C:\Users\dell\wifi_scanner\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.4_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.4.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/dell/wifi_scanner/build/partition_table/partition-table.bin C:/Users/dell/wifi_scanner/build/wifi_scanner.bin"
wifi_scanner.bin binary size 0xbaf60 bytes. Smallest app partition is 0x100000 bytes. 0x450a0 bytes (27%) free.
[9/10] C:\WINDOWS\system32\cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.4.1\components\esptool_py && C:\Espressif\tools\cmake\3.30.2\bin\cmake.exe -D IDF_PATH=C:/Espressif/frameworks/esp-idf-v5.4.1 -D SERIAL_TOOL=C:/Espressif/python_env/idf5.4_py3.11_env/Scripts/python.exe;;C:/Espressif/frameworks/esp-idf-v5.4.1/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/Users/dell/wifi_scanner/build -P C:/Espressif/frameworks/esp-idf-v5.4.1/components/esptool_py/run_serial_tool.cmake"
esptool.py --chip esp32 -p COM17 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 wifi_scanner.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.1
Serial port COM17
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 08:f9:e0:ba:79:8c
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x000cafff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 25984 bytes to 16377...
Writing at 0x00001000... (100 %)
Wrote 25984 bytes (16377 compressed) at 0x00001000 in 0.5 seconds (effective 405.1 kbit/s)...
Hash of data verified.
Compressed 765792 bytes to 485372...
Writing at 0x00010000... (3 %)
Writing at 0x0001c3c5... (6 %)
Writing at 0x00024fd9... (10 %)
Writing at 0x0002f3ab... (13 %)
Writing at 0x00034dd9... (16 %)
Writing at 0x0003af50... (20 %)
Writing at 0x00040b8a... (23 %)
Writing at 0x0004642c... (26 %)
Writing at 0x0004bfc5... (30 %)
Writing at 0x00051b9e... (33 %)
Writing at 0x00057b70... (36 %)
Writing at 0x0005d6b7... (40 %)
Writing at 0x00063a2a... (43 %)
Writing at 0x000691c1... (46 %)
Writing at 0x0006e4f0... (50 %)
Writing at 0x0007365e... (53 %)
Writing at 0x00078962... (56 %)
Writing at 0x0007df07... (60 %)
Writing at 0x00083794... (63 %)
Writing at 0x000893c3... (66 %)
Writing at 0x0008ecc1... (70 %)
Writing at 0x00094a3e... (73 %)
Writing at 0x0009a432... (76 %)
Writing at 0x0009faef... (80 %)
Writing at 0x000a7bb4... (83 %)
Writing at 0x000b084c... (86 %)
Writing at 0x000b650d... (90 %)
Writing at 0x000bc030... (93 %)
Writing at 0x000c245b... (96 %)
Writing at 0x000c77a1... (100 %)
Wrote 765792 bytes (485372 compressed) at 0x00010000 in 11.4 seconds (effective 537.9 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 912.4 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
